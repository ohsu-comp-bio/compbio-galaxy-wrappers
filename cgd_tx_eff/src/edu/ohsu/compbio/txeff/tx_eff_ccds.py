'''
Created on Aug. 24, 2022

@author: pleyte
'''

from _collections import defaultdict
import csv
import logging

class TxEffCcds(object):
    '''
    This class adds CCDS accessions to the transcript effects 
    '''
    def __init__(self, refseq_to_ccds_file):
        '''
        refseq_to_ccds_file is the path to a file that contains mappings from RefSeq id to CCDS id. The file can either 
        be the NCBI GFF (eg https://ftp.ncbi.nlm.nih.gov/refseq/H_sapiens/annotation/GRCh37_latest/refseq_identifiers/GRCh37_latest_genomic.gff.gz) 
        or the csv file generated by ``tx_eff_csv.py``  
        '''
        # Set up a logger for this class
        self.logger = logging.getLogger(__name__)

        self.refseq_to_ccds_map = self._read_mappings(refseq_to_ccds_file)

    def _read_mappings(self, refseq_to_ccds_file):
        '''
        Return a dictionary of RefSeq id to CCDS id. The mappings are read from a CSV file that was created by 
        the script: https://github.com/ohsu-comp-bio/kdl-tools/tree/master/cgd_prep/src/edu/ohsu/compbio/etl/refseq_ccds.py
        '''
        refseq_ccds_map = defaultdict()
        
        with open(refseq_to_ccds_file) as csv_file:
            reader = csv.DictReader(csv_file)
            for row in reader:
                if refseq_ccds_map.get(row['refseq_id']) is not None:
                    raise Exception(f"RefSeq id {row['refseq_id']} is already mapped to {refseq_ccds_map.get(row['refseq_id'])}. Cannot add additional mapping to {row['ccds_id']}")
                
                refseq_ccds_map[row['refseq_id']] = row['ccds_id']
        
        if(len(refseq_ccds_map) == 0): 
            raise Exception(f"No mappings found in input file {self.refseq_to_ccds_file}")
        
        self.logger.info(f"Created RefSeq-CCDS map of size {len(refseq_ccds_map)} from CSV")
        
        return refseq_ccds_map
