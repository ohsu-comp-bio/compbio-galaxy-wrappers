<tool id="fg_GroupReadsByUmi" name="Group Reads by UMI" version="@WRAPPER_VERSION@0">
  <description>Groups reads together that appear to have come from the same original molecule.</description>
  <macros>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code"><![CDATA[
    @CMD_BEGIN@ GroupReadsByUmi
    #include source=$input_output_cmd#
    #include source=$strategy_cmd#
    #include source=$edits_cmd#
    #include source=$family_size_histogram_cmd#
    #include source=$raw_tag_cmd#
    #include source=$assign_tag_cmd#
    #include source=$min_map_q_cmd#
    #include source=$include_non_pf_reads_cmd#
    #include source=$min_umi_length_cmd#
    #include source=$log_cmd#
    ]]>
  </command>
  <inputs>
    <expand macro="sam_input"/>
    <expand macro="strategy_input"/>
    <expand macro="edits_input"/>
    <expand macro="family_size_histogram_input"/>
    <expand macro="raw_tag_input"/>
    <expand macro="assign_tag_input"/>
    <expand macro="min_map_q_input"/>
    <expand macro="include_non_pf_reads_input"/>
    <expand macro="min_umi_length_input"/>
  </inputs>
  <outputs>
    <data format="unsorted.bam" name="output" label="${tool.name} on ${on_string}: UNSORTED BAM"/>
    <expand macro="family_size_histogram_output"/>
    <expand macro="log_output"/>
  </outputs>
  <help>
  <![CDATA[
Groups reads together that appear to have come from the same original molecule. Reads are grouped by template, and then templates are sorted by the 5â€™ mapping positions of the reads from the template, used from earliest mapping position to latest. Reads that have the same end positions are then sub-grouped by UMI sequence.

Accepts reads in any order (including unsorted) and outputs reads sorted by:

The lower genome coordinate of the two outer ends of the templates
The sequencing library
The assigned UMI tag
Read Name
Reads are aggressively filtered out so that only high quality read pairs with both ends mapped are taken forward. (Note: the MQ tag is required on reads with mapped mates). This is done with the expectation that the next step is building consensus reads, where it is undesirable to either:

Assign reads together that are really from different source molecules
Build two groups from reads that are really from the same molecule
Errors in mapping reads could lead to both and therefore are minimized.

Grouping of UMIs is performed by one of three strategies:

identity: only reads with identical UMI sequences are grouped together. This strategy may be useful for evaluating data, but should generally be avoided as it will generate multiple UMI groups per original molecule in the presence of errors.
edit: reads are clustered into groups such that each read within a group has at least one other read in the group with <= edits differences and there are inter-group pairings with <= edits differences. Effective when there are small numbers of reads per UMI, but breaks down at very high coverage of UMIs.
adjacency: a version of the directed adjacency method described in umi_tools that allows for errors between UMIs but only when there is a count gradient.
paired: similar to adjacency but for methods that produce template with a pair of UMIs such that a read with A-B is related to but not identical to a read with B-A. Expects the pair of UMIs to be stored in a single tag, separated by a hyphen (e.g. ACGT-CCGG). The molecular IDs produced have more structure than for single UMI strategies, and are of the form {base}/{AB|BA}. E.g. two UMI pairs would be mapped as follows AAAA-GGGG -> 1/AB, GGGG-AAAA -> 1/BA.
edit, adjacency and paired make use of the --edits parameter to control the matching of non-identical UMIs.

By default, all UMIs must be the same length. If --min-umi-length=len is specified then reads that have a UMI shorter than len will be discarded, and when comparing UMIs of different lengths, the first len bases will be compared, where len is the length of the shortest UMI. The UMI length is the number of [ACGT] bases in the UMI (i.e. does not count dashes and other non-ACGT characters). This option is not implemented for reads with UMI pairs (i.e. using the paired assigner).

]]>
  </help>
</tool>